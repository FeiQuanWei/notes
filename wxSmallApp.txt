采坑
  this.setData({
    variable:value
  })
  因为小程序中的数据都在页面中进行了绑定，所以当直接使用"="赋值时，打印出来的变量虽然已经被赋值了，但是页面显示数据没有刷新，
  所以小程序中，推荐使用以上方法进行对变量的赋值

  小程序页面之间传值的方法
    ①通过url
      A页面代码
        <navigator class="active" url="/pages/play/play?id=380">首页</navigator>
        或js
          let id = 380
          wx.navigateTo({
            url:"/asdf/asdf?id="+id
          })
      B页面代码
        目标页面获取参数  =>  在小程序生命周期的钩子函数中
          onload(option){
            option.id  =>  380
          }
    
    ②本地存储
      A页面代码
        let id = 380;
        wx.setStorageSycn("id",id)
      B页面代码
        let id = wx.getStorageSycn("id")  =>  380
    
    ③全局app
      A页面代码 
        var app = getApp();
        app.id = 380
      B页面代码
        var app = getApp();
        let id = app.id  =>  380

小程序相关事件
  bindtab='' 绑定点击事件
  bindconfrm='' 绑定小键盘回车按钮

页面跳转
  wx.navigateTo({ url });  =>  保留当前页面，跳转到应用内的某个页面
  wx.redirectTo({ url });  =>  关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面
  wx.reLaunch({ url });  =>  关闭所有页面，打开到应用内的某个页面

组件的生命周期
  lifetimes: {
    created  =>  组件实例刚刚被创建好时， created 生命周期被触发
    attached  =>  在组件完全初始化完毕、进入页面节点树后， attached 生命周期被触发
    ready  =>  在组件在视图层布局完成后执行
    detached  =>  组件离开页面节点树后， detached 生命周期被触发
  },
  pageLifetimes: {
    show  =>  页面被展示
    hide  =>  页面被隐藏
    resize  =>  页面尺寸变化
  }

纯数据字段
  Component({
    options: {
      pureDataPattern: /^_/ // 指定所有 _ 开头的数据字段为纯数据字段
    },
  })
  纯数据字段的修改不会引起页面的重新渲染