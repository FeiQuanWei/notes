https://cnodejs.org/topic/5a72c66ace45d440451465c3  node入门及进阶视频
https://www.jianshu.com/p/7241f7c83f4a   Mac安装mongodb
https://cnodejs.org/topic/5b1939ad29e6e510415b2916
https://cnodejs.org/topic/5ab3166be7b166bb7b9eccf7
https://icomoon.io
https://router.vuejs.org/zh/

style标签的lang属性，规定元素内容的语言，rel(relation ship :关系图表)属性

iconMoon  svg图表制作网站

经验
    display:table;无论内容一行还是两行，都可以垂直居中
    str+'-hook'  作为样式时，表明该类是js为操作DOM而绑定的类，并没有实际样式效果

优化
    css样式减少嵌套层级
    压缩图片
    减少Dom操作次数
    js代码减少循环次数
    for循环优化

事件bug
    mouseout和mouseleave事件
    mouseout:当鼠标移动到子元素上时，也会触发移出事件
    mouseleave:当鼠标移出该元素以及该元素的子元素时，才会触发移出事件

基本数据类型
    字符串、数字、布尔、Null、Undefined

引用类型
    object、function、array

计数器传参
    setInterval(function(property){
        console.log(property)
    },1000,'property')

正则表达式
    var reg = new RegExp('正则表达式');
    reg.test("string");   查看字符串中是否有符合正则表达式的,返回true或false
    reg.exec("string");  检索字符串是否有指定字符，如果有责返回指定字符，否则返回null
    reg.compile("正则表达式");  改变正则表达式

自调函数
    ①(function(x,y){
        alert x+y
     })(1,2);  =>3
    
    ②(function(x,y){
        alert x+y
     }(1,2));  =>3
    
    ③void function(x){
        x=x+1;
        alert(x);
     }(1); =>2
    
    ④!function(x){
        return x-1
     }(9); =>8
    
    ⑤-function(x,y){
        alert(x+y);
        return x+y;
     }(3,4); =>7

    ⑥+function(x,y){
        alert(x+y);
        return x+y;
     }(3,4); =>7

    ⑦--function(x,y){
        alert(x+y);
        return x+y;
     }(3,4); =>7

    ⑧++function(x,y){
        alert(x+y);
        return x+y;
     }(3,4); =>7

    ⑨~function(x){
        alert(x)
     }(4); =>4

    ⑩new function(win){
        console.log(win) // window
     }(this);

    ⑪typeof function(){
        console.log(this) // 浏览器得控制台输出window
     }(this);

    ⑫delete function(){
        console.log(this) // 浏览器得控制台输出window
     }(this);

exports和module.exports
    commonJS规定，每个模块内部，module变量代表当前这个模块，这个变量是一个对象，它的exports属性(module.exports)是对外的接口，加载
    每个模块，也就是加载该模块的module.exports属性，
        eg:
            var x = 5;
            var addx = function(value){
                return value + x;
            }
            module.exports.x = x;
            module.exports.addx = addx;
            以上代码通过module.exports输出变量x和函数addX。
            require方法用于加载模块
                eg:
                    var example = require('./example.js');
                    console.log(example.x);  =>5
                    console.log(example.addx(1)); =>6

    exports和module.exports
        为了方便Node为每个模块提供一个exports变量，指向module.exports。这等同在每个模块头部，有一行这样的命令。
        var exports = module.exports;
        我们可以直接在 exports 对象上添加方法，表示对外输出的接口，如同在module.exports上添加一样。
        注意，不能直接将exports变量指向一个值，因为这样等于切断了exports与module.exports的联系






AMD、CMD、CommonJs和ES6对比
    AMD[异步模块定义]
        是requireJS(依赖前置[在需要的时候，在最上边定义好，然后通过回调使用])在推广过程中的对模块化定义的规范化产出
        requireJS是AMD概念的一个实现

    CMD[同步模块定义]
        是SeaJS(依赖就近[在什么地方使用，就在什么地方引用])在推广过程中的对模块化定义的规范化产出
        SeaJs是CMD概念的一个实现

    CommonJs
        通过module-exports定义，浏览器并不支持，nodejs推荐使用commonJS规范
    
    es6特性 export\import
        export导出
        import导入

